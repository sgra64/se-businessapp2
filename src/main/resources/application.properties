# ========================================================

spring.application.name = Simple Spring Boot Demo Application

#logging.level.root = OFF
#logging.level.com.businessapp.Application = INFO

# ========================================================
# = DATASOURCE / H2 DATABASE: https://www.h2database.com
# ========================================================
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.url=jdbc:h2:./data.h2;AUTO_SERVER=TRUE
#spring.datasource.url=jdbc:h2:file:./data.h2
spring.datasource.url=jdbc:h2:file:./data/H2db
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
#spring.datasource.initialize=false

spring.h2.console.enabled=true
#spring.h2.console.path=/h2

# ========================================================
# = DATASOURCE / MYSQL DATABASE: https://www.mysql.com
# ========================================================
#spring.datasource.url = jdbc:mysql://localhost:3306/notes_app?useSSL=false
#spring.datasource.username = root
#spring.datasource.password = root


# ========================================================
# = JPA / Java Persistence Configurations
# ========================================================

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#--------------------------------------------------------------------
#Hibernate DDL generation strategies (DDL data definition language):
# source: https://stackoverflow.com/questions/438146/what-are-the-possible-
#				values-of-the-hibernate-hbm2ddl-auto-configuration-and-wha
#
# none:		No action is performed. The schema will not be generated.
# create-only: The database schema will be generated.
# drop:		The database schema will be dropped and created afterwards.
# create:	The database schema will be dropped and created afterwards.
# create-drop: The schema is not dropped on closing the session. It drops
#			only on closing the SessionFactory.
# validate:	If schema does not exists in DB, it is not created. Instead,
#			it will throw an error: Table not found:<table name>.
# update:	If schema is not present in the DB then the schema is created.
#			The database schema will be updated by comparing the existing
#			database schema with the entity mappings.
# otherwise:
#   if schema is not present in the DB:- It creates the schema
#   if schema is present in the DB:- update the schema.

## Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect


# ========================================================
# = 
# ========================================================
